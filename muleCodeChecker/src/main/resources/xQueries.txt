"email addresses externalized",//*:to-address/string-join((../../@*:name,@value, starts-with(@value,"${")), ", ")
"connx is TLS-enabled",//*[ends-with(local-name(), "-connection")]/ string-join(    (           string-join((local-name(), ../@name), " "),     (not(local-name() != "request-connection" and @protocol="HTTPS") or     not(not(@tlsContext)) or not(not(./t"hostName externalized",//*[ends-with(local-name(), "-connection")]/string-join((local-name(), @host, starts-with(@host, "$") or not(@host))," ,") 
"scheduler config externalized",//*:scheduler/*:scheduling-strategy/*:fixed-frequency/string-join(("-", @frequency, starts-with("$", ", ")), ",")
"cron  config externalized",//*:scheduler/*:scheduling-strategy/*:cron/string-join(("-", @expression, starts-with("$", ", ")), ",")
"cc address externalized",//*:cc-address/string-join((../../@*:name,@value, starts-with(@value,"${")), ", ")
"request-host externalized",//*[ends-with(local-name(), "-connection")]/concat(local-name(), ", ",starts-with(@host, "$"))
"good sub-flow name",//*:sub-flow/string-join((@name, starts-with(@name, concat(^fileName^, "_")) and not(ends-with(@name, "Flow"))), ", ")
"good flow name",//*:flow/string-join((@name,  (  (@name,(starts-with(@name, "get:") and ends-with(@name, concat(^fileName^, "-config") ) ) ) or  (@name,(starts-with(@name, "put:") and ends-with(@name, concat(^fileName^, "-config") ) ) ) or  (@name,(st
"no globals in flow-files",not(/*:mule/*[local-name() != "flow" and local-name() != "sub-flow"])  or contains(^fileName^, "global")
"passwords secure",//@password/string-join((../local-name(),.,    (. = "provided at deploy-time" or starts-with(., "${secure::"))),", ")
"props-files environment-enabled",//*:configuration-properties/string-join((@doc:name,  (contains(@file, "${mule.env}")) or contains(@file, "-common.") ), ", ")
"choice properly named",//*:choice/string-join(("choice properly named", @doc:name != "Choice"),", ")
"set-payload named properly",//n:set-payload/string-join((@doc:name, not(starts-with(@doc:name, "Set Payload"))),", ")
"set-variable named properly",//n:set-variable/string-join((@doc:name, not(starts-with(@doc:name, "Set Payload"))),", ")
"keypasswords secure",//@keyPassword/string-join((../local-name(),.,    (. = "provided at deploy-time" or starts-with(., "${secure::"))),", ")